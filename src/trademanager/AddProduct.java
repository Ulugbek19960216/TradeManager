/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package trademanager;
import Classes.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author HP
 */
public class AddProduct extends javax.swing.JDialog implements Observable{
        DefaultTableModel modelTable;
    /**
     * Creates new form AddProduct
     */
    public AddProduct(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        modelTable = (DefaultTableModel) productListTable.getModel();
        Warehouse.getInstance().registerObservable(this);
        modelTable.setRowCount(0);
        Warehouse.getInstance().registerObservable(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addButton = new javax.swing.JButton();
        scroolBar = new javax.swing.JScrollBar();
        panel = new javax.swing.JScrollPane();
        productListTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        addButton.setBackground(new java.awt.Color(51, 204, 255));
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("ADD");
        addButton.setAlignmentX(0.5F);
        addButton.setBorderPainted(false);
        addButton.setOpaque(true);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        productListTable.setAutoCreateRowSorter(true);
        productListTable.setBackground(new java.awt.Color(255, 255, 255));
        productListTable.setForeground(new java.awt.Color(51, 204, 255));
        productListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Name", "Price", "Quantity", "Status"
            }
        ));
        productListTable.setAlignmentX(1.0F);
        productListTable.setAlignmentY(1.0F);
        productListTable.setOpaque(false);
        productListTable.setSelectionForeground(new java.awt.Color(51, 204, 255));
        panel.setViewportView(productListTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 61, Short.MAX_VALUE)
                        .addComponent(scroolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(scroolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
            .addComponent(panel)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
       AddProductPop.main(null);
    }//GEN-LAST:event_addButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
         AddProduct addProduct = new AddProduct(MainWindow.getInstance(), true);
        addProduct.setLocationRelativeTo(MainWindow.getInstance() );
        addProduct.pack();
        addProduct.setVisible(true); 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JScrollPane panel;
    private javax.swing.JTable productListTable;
    private javax.swing.JScrollBar scroolBar;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onUpdate() {
        modelTable.setRowCount(0);
        
        for (int i = 0; i < Warehouse.getInstance().getProductCount(); i++) {
            Product items = Warehouse.getInstance().getProduct(i);
            
            modelTable.addRow(new Object[] { items.getId(),  items.getName(), items.getPrice(), items.getKuantity(), items.getStatus() });
        }
    }
}//Warehouse.getInstance().getProductCount());
